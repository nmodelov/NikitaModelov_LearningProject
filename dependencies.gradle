ext {
    daggerVersion = '2.30.1'
    retrofitVersion = '2.9.0'
    moshiVersion = '1.11.0'
    okhttpVersion = '4.3.1'
    mviKotlinVersion = '2.0.0'
    coroutinesVersion = '1.4.2'
    lifecycleVersion = '2.2.0'
    spekVersion = '2.0.12'
    mannodermausVersion = '1.2.0'
    androidxTest = '1.3.0'
    depsWithVersion = [
            // Kotlin
            'org.jetbrains.kotlin:kotlin-stdlib'                     : kotlinVersion,
            'org.jetbrains.kotlinx:kotlinx-coroutines-core'          : coroutinesVersion,
            'org.jetbrains.kotlinx:kotlinx-coroutines-android'       : coroutinesVersion,
            'org.jetbrains.kotlinx:kotlinx-coroutines-test'          : coroutinesVersion,
            'org.jetbrains.kotlin:kotlin-stdlib-jdk8'                : kotlinVersion,

            // Android
            'androidx.core:core-ktx'                                 : '1.3.0',
            'androidx.appcompat:appcompat'                           : '1.1.0',
            'androidx.constraintlayout:constraintlayout'             : '1.1.3',
            'com.google.android.material:material'                   : '1.1.0',
            'androidx.lifecycle:lifecycle-viewmodel-ktx'             : lifecycleVersion,
            'androidx.lifecycle:lifecycle-runtime'                   : lifecycleVersion,
            'androidx.lifecycle:lifecycle-common-java8'              : lifecycleVersion,
            'androidx.lifecycle:lifecycle-livedata-ktx'              : lifecycleVersion,
            'androidx.lifecycle:lifecycle-viewmodel-savedstate'      : lifecycleVersion,

            // RxJava2
            'io.reactivex.rxjava2:rxjava'                            : '2.2.16',
            'io.reactivex.rxjava2:rxkotlin'                          : '2.2.0',
            'io.reactivex.rxjava2:rxandroid'                         : '2.1.1',

            // RxJava3
            'io.reactivex.rxjava3:rxjava'                            : '3.0.4',
            'io.reactivex.rxjava3:rxkotlin'                          : '3.0.0',
            'io.reactivex.rxjava3:rxandroid'                         : '3.0.0',

            // DI
            'com.google.dagger:dagger'                               : daggerVersion,
            'com.google.dagger:dagger-compiler'                      : daggerVersion,
            'com.google.dagger:hilt-android'                         : hiltVersion,
            'com.google.dagger:hilt-android-compiler'                : hiltVersion,
            'com.google.dagger:hilt-android-testing'                 : hiltVersion,
            'javax.inject:javax.inject'                              : '1',

            // Utils
            'com.jakewharton.timber:timber'                          : '4.7.1',
            'com.redmadrobot:inputmask'                              : '4.1.0',

            // Network
            'com.squareup.okhttp3:okhttp'                            : okhttpVersion,
            'com.squareup.okhttp3:logging-interceptor'               : okhttpVersion,
            'com.squareup.retrofit2:retrofit'                        : retrofitVersion,
            'com.squareup.retrofit2:adapter-rxjava2'                 : retrofitVersion,
            'com.squareup.retrofit2:converter-moshi'                 : retrofitVersion,
            'com.squareup.moshi:moshi-kotlin'                        : moshiVersion,
            'com.squareup.moshi:moshi-kotlin-codegen'                : moshiVersion,

            // Testing
            'junit:junit'                                            : '4.13',
            'androidx.test.ext:junit'                                : '1.1.2',
            'androidx.test.espresso:espresso-core'                   : '3.3.0',
            'androidx.test:core'                                     : androidxTest,
            'androidx.test:runner'                                   : androidxTest,
            'androidx.test:orchestrator'                             : androidxTest,
            'androidx.test:rules'                                    : androidxTest,

            // MVI Kotlin
            'com.arkivanov.mvikotlin:mvikotlin'                      : mviKotlinVersion,
            'com.arkivanov.mvikotlin:mvikotlin-main'                 : mviKotlinVersion,
            'com.arkivanov.mvikotlin:mvikotlin-logging'              : mviKotlinVersion,
            'com.arkivanov.mvikotlin:mvikotlin-timetravel'           : mviKotlinVersion,
            'com.arkivanov.mvikotlin:mvikotlin-extensions-reaktive'  : mviKotlinVersion,
            'com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines': mviKotlinVersion,
            'com.arkivanov.mvikotlin:rx'                             : mviKotlinVersion,
            'com.arkivanov.mvikotlin:rx-internal'                    : mviKotlinVersion,
            'com.arkivanov.mvikotlin:utils-internal'                 : mviKotlinVersion,
            'com.arkivanov.mvikotlin:keepers'                        : mviKotlinVersion,

            // Cicerone
            'com.github.terrakok:cicerone'                           : '6.6',

            // Cicerone addons
            'com.github.aradxxx:ciceroneflows'                       : '0.6.63',
            'com.github.aradxxx:ciceronescreens'                     : '1.0',

            // Preference
            'androidx.preference:preference-ktx'                     : '1.1.1',

            // assertion
            'org.jetbrains.kotlin:kotlin-test'                       : kotlinVersion,
            'org.assertj:assertj-core'                               : '2.9.1',

            // spek2
            'org.spekframework.spek2:spek-dsl-jvm'                   : spekVersion,
            'org.spekframework.spek2:spek-runner-junit5'             : spekVersion,
            'org.jetbrains.kotlin:kotlin-reflect'                    : kotlinVersion,

            'de.mannodermaus.junit5:android-test-core'               : mannodermausVersion,
            'de.mannodermaus.junit5:android-test-runner'             : mannodermausVersion,
            'com.kaspersky.android-components:kaspresso'             : '1.2.0',
            'io.mockk:mockk'                                         : '1.10.2',

            'ru.tinkoff.decoro:decoro'                               : '1.4.1'
    ]


    dep = { String key ->
        def version = depsWithVersion[key]
        if (version == null) throw new IllegalDependencyNotation("Unknown version for '$key'. Update project_root/dependencies.gradle")
        "$key:${version}"
    }
}
