apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

apply plugin: 'de.mannodermaus.android-junit5'

android {
    compileSdkVersion project.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        testInstrumentationRunnerArgument 'runnerBuilder', 'de.mannodermaus.junit5.AndroidJUnit5Builder'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
    }

    buildFeatures {
        viewBinding = true
        buildConfig = false
    }

    lintOptions {
        checkGeneratedSources = true // keep it true, otherwise lint will mark activitie's
        // layouts as unused, because it inflates though the class generated by ViewBinding
    }

    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
            jacocoOptions {
                // here goes all jacoco config, for example
                html.enabled = true
                xml.enabled = false
                csv.enabled = false
                unitTests.all {
                    testLogging.events = ['passed', 'skipped', 'failed']
                }
            }
        }
        unitTests.returnDefaultValues = true
    }

    // Add Kotlin source directory to all source sets
    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE*'
    }
}

dependencies {
    implementation dep('org.jetbrains.kotlin:kotlin-stdlib')

    // assertion
    testImplementation dep('org.jetbrains.kotlin:kotlin-test')
    testImplementation dep('org.assertj:assertj-core')

    // spek2
    testImplementation dep('org.spekframework.spek2:spek-dsl-jvm')
    testImplementation dep('org.spekframework.spek2:spek-runner-junit5')
    testImplementation dep('org.jetbrains.kotlin:kotlin-reflect')
    testImplementation dep('org.jetbrains.kotlin:kotlin-stdlib-jdk8')

    androidTestImplementation dep('de.mannodermaus.junit5:android-test-core')
    androidTestRuntimeOnly dep('de.mannodermaus.junit5:android-test-runner')
    testImplementation dep('org.jetbrains.kotlinx:kotlinx-coroutines-test')

    androidTestImplementation dep('androidx.test.ext:junit')

    // Timber
    api dep('com.jakewharton.timber:timber')
}