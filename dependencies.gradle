ext {
    daggerVersion = '2.26'
    retrofitVersion = '2.9.0'
    okhttpVersion = '4.3.1'
    mviKotlinVersion = '2.0.0-rc1'
    coroutinesVersion = '1.3.7'
    lifecycle_version = '2.2.0'

    depsWithVersion = [
            // Kotlin
            'org.jetbrains.kotlin:kotlin-stdlib'                     : kotlin_version,
            'org.jetbrains.kotlinx:kotlinx-coroutines-core'          : coroutinesVersion,
            'org.jetbrains.kotlinx:kotlinx-coroutines-android'       : coroutinesVersion,

            // Android
            'androidx.core:core-ktx'                                 : '1.3.0',
            'androidx.appcompat:appcompat'                           : '1.1.0',
            'androidx.constraintlayout:constraintlayout'             : '1.1.3',
            'com.google.android.material:material'                   : '1.1.0',
            'androidx.lifecycle:lifecycle-viewmodel-ktx'             : lifecycle_version,
            'androidx.lifecycle:lifecycle-runtime'                   : lifecycle_version,
            'androidx.lifecycle:lifecycle-common-java8'              : lifecycle_version,
            'androidx.lifecycle:lifecycle-livedata-ktx'              : lifecycle_version,

            // RxJava2
            'io.reactivex.rxjava2:rxjava'                            : '2.2.16',
            'io.reactivex.rxjava2:rxkotlin'                          : '2.2.0',
            'io.reactivex.rxjava2:rxandroid'                         : '2.1.1',

            // RxJava3
            'io.reactivex.rxjava3:rxjava'                            : '3.0.4',
            'io.reactivex.rxjava3:rxkotlin'                          : '3.0.0',
            'io.reactivex.rxjava3:rxandroid'                         : '3.0.0',

            // DI
            'com.google.dagger:dagger'                               : daggerVersion,
            'com.google.dagger:dagger-android'                       : daggerVersion,
            'com.google.dagger:dagger-android-support'               : daggerVersion,
            'com.google.dagger:dagger-compiler'                      : daggerVersion,
            'com.google.dagger:dagger-android-processor'             : daggerVersion,

            // Utils
            'com.jakewharton.timber:timber'                          : '4.7.1',
            'com.redmadrobot:inputmask'                              : '4.1.0',

            // Network
            'com.squareup.okhttp3:okhttp'                            : okhttpVersion,
            'com.squareup.okhttp3:logging-interceptor'               : okhttpVersion,
            'com.squareup.retrofit2:retrofit'                        : retrofitVersion,
            'com.squareup.retrofit2:adapter-rxjava2'                 : retrofitVersion,
            'com.squareup.retrofit2:converter-gson'                  : retrofitVersion,
            'com.google.code.gson:gson'                              : '2.8.5',

            // Testing
            'junit:junit'                                            : '4.12',
            'androidx.test.ext:junit'                                : '1.1.1',
            'androidx.test.espresso:espresso-core'                   : '3.2.0',

            // MVI Kotlin
            'com.arkivanov.mvikotlin:mvikotlin'                      : mviKotlinVersion,
            'com.arkivanov.mvikotlin:mvikotlin-main'                 : mviKotlinVersion,
            'com.arkivanov.mvikotlin:mvikotlin-logging'              : mviKotlinVersion,
            'com.arkivanov.mvikotlin:mvikotlin-timetravel'           : mviKotlinVersion,
            'com.arkivanov.mvikotlin:mvikotlin-extensions-reaktive'  : mviKotlinVersion,
            'com.arkivanov.mvikotlin:mvikotlin-extensions-coroutines': mviKotlinVersion,
            'com.arkivanov.mvikotlin:rx'                             : mviKotlinVersion,
            'com.arkivanov.mvikotlin:androidx-lifecycle-interop'     : mviKotlinVersion,

            // Cicerone
            'ru.terrakok.cicerone:cicerone'                          : '5.1.1',

            // Preference
            'androidx.preference:preference-ktx'                     : '1.1.1',
    ]

    dep = { String key ->
        def version = depsWithVersion[key]
        if (version == null) throw new IllegalDependencyNotation("Unknown version for '$key'. Update project_root/dependencies.gradle")
        "$key:${version}"
    }
}
