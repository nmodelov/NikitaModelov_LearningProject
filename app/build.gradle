apply plugin: 'com.android.application'
apply plugin: 'dagger.hilt.android.plugin'
apply from : '../android.module.gradle'

android {
    def formattedDate = new Date().format('dd.MM.yyyy')

    defaultConfig {
        applicationId 'com.apps65.mvitemplate'
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        setProperty('archivesBaseName', "mvitemplate-${formattedDate}.v${defaultConfig.versionName}")
    }

    buildFeatures {
        viewBinding = true
        buildConfig = true
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    implementation dep('com.google.android.material:material')

    androidTestImplementation dep('com.kaspersky.android-components:kaspresso')

    testImplementation dep('com.arkivanov.mvikotlin:rx')
    testImplementation dep('junit:junit')

    api project(':netutils')
    api project(':mvi')
    api project(':mvicoroutines')
    api project(':commonui')

    // Spek2 plugin classpath fix
    testImplementation dep('com.arkivanov.mvikotlin:utils-internal')

    // Dagger2
    implementation dep('com.google.dagger:hilt-android')
    kapt dep('com.google.dagger:hilt-android-compiler')

    // For instrumentation tests
    androidTestImplementation  dep('com.google.dagger:hilt-android-testing')
    kaptAndroidTest dep('com.google.dagger:hilt-android-compiler')

    // For local unit tests
    testImplementation dep('com.google.dagger:hilt-android-testing')
    kaptTest dep('com.google.dagger:hilt-android-compiler')

    // Cicerone
    implementation dep('com.github.aradxxx:ciceroneflows')

    // Preference
    implementation dep('androidx.preference:preference-ktx')
}
